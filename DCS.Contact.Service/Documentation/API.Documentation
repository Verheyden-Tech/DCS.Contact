<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DCS.Contact.Service</name>
    </assembly>
    <members>
        <member name="T:DCS.Contact.Service.CompanyService">
            <summary>
            Company service to handle company data.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.CompanyService.#ctor(DCS.Contact.ICompanyRepository)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.CompanyService.CreateNewCompany(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:DCS.Contact.Company"/>.
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:DCS.Contact.Service.ContactAssignementService">
            <summary>
            Provides functionality for managing and interacting with contact assignments.
            </summary>
            <remarks>This service is responsible for operations related to the <see cref="T:DCS.Contact.ContactAssignement"/>
            entity,  leveraging the specified repository for data access. It extends the <see cref="T:DCS.CoreLib.BaseClass.ServiceBase`3"/>  class, providing a specialized implementation for contact assignment
            management.</remarks>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.#ctor(DCS.Contact.IContactAssignementRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.Service.ContactAssignementService"/> class.
            </summary>
            <remarks>This constructor sets up the service with the specified repository, which is used to
            perform data operations related to contact assignments. Ensure that a valid implementation of  <see
            cref="T:DCS.Contact.IContactAssignementRepository"/> is provided.</remarks>
            <param name="contactAssignementRepository">The repository used to manage contact assignments. This parameter cannot be null.</param>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.AddAdressToContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.RemoveAdressFromContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.AddEmailToContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.RemoveEmailFromContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.AddPhoneToContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.RemovePhoneFromContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.AddCompanyToContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.RemoveCompanyFromContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.AddGroupToContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.RemoveGroupFromContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.AddRoleToContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactAssignementService.RemoveRoleFromContact(System.Guid,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="T:DCS.Contact.Service.ContactService">
            <summary>
            DCS ContactService to manipulate contact data.
            </summary>
        </member>
        <member name="F:DCS.Contact.Service.ContactService.repository">
            <summary>
            Repository for contact management.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.ContactService.#ctor(DCS.Contact.IContactRepository)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.ContactService.GetByName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactService.CreateNewContact(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactService.GetByFirstName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.ContactService.GetByLastName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DCS.Contact.Service.EmailAdressService">
            <summary>
            EmailAdressService to manipulate emailadress data.
            </summary>
        </member>
        <member name="F:DCS.Contact.Service.EmailAdressService.repository">
            <summary>
            Repository for email data.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.EmailAdressService.#ctor(DCS.Contact.IEmailAdressRepository)">
            <summary>
            EmailAdressService constructor.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.EmailAdressService.GetAllByContact(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.EmailAdressService.GetAllByUser(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.EmailAdressService.CreateEmailAdress(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DCS.Contact.Service.GroupService">
            <summary>
            Service for group data management on the table.
            </summary>
        </member>
        <member name="F:DCS.Contact.Service.GroupService.repository">
            <summary>
            Repository for group data management on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.GroupService.#ctor(DCS.Contact.IGroupRepository)">
            <summary>
            Default constructor for <see cref="T:DCS.Contact.Service.GroupService"/> class.
            </summary>
            <param name="repository"><see cref="T:DCS.Contact.IGroupRepository"/> interface.</param>
        </member>
        <member name="M:DCS.Contact.Service.GroupService.CreateNewGroup(System.String,System.Guid,System.String)">
            <inheritDoc/>
        </member>
        <member name="T:DCS.Contact.Service.PhoneService">
            <summary>
            Phone Service to handle phone data on the table.
            </summary>
        </member>
        <member name="F:DCS.Contact.Service.PhoneService.repository">
            <summary>
            Repository to handle phone data on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.PhoneService.#ctor(DCS.Contact.IPhoneRepository)">
            <summary>
            Constructor for <see cref="T:DCS.Contact.Service.PhoneService"/>.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.PhoneService.GetAllByContact(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.PhoneService.CreateNewPhone(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DCS.Contact.Service.PhysicalAdressService">
            <summary>
            DCS PhysicalAdressService to manipulate adress data.
            </summary>
        </member>
        <member name="F:DCS.Contact.Service.PhysicalAdressService.repository">
            <summary>
            Repository for PhysicalAdressService.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.PhysicalAdressService.#ctor(DCS.Contact.IPhysicalAdressRepository)">
            <summary>
            Constructor for PhysicalAdressService.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.PhysicalAdressService.CreateNewAdress(System.String,System.String,System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.PhysicalAdressService.GetAllByContact(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:DCS.Contact.Service.PhysicalAdressService.GetAllByContact(DCS.Contact.Contact)">
            <inheritdoc/>
        </member>
        <member name="T:DCS.Contact.Service.RoleService">
            <summary>
            DCS RoleService to manipulate role data.
            </summary>
        </member>
        <member name="F:DCS.Contact.Service.RoleService.repository">
            <summary>
            Repository for RoleService.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.RoleService.#ctor(DCS.Contact.IRoleRepository)">
            <summary>
            Constructor for RoleService.
            </summary>
        </member>
        <member name="M:DCS.Contact.Service.RoleService.CreateNewRole(System.String,System.Guid,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DCS.Contact.Service.TypeService">
            <summary>
            Provides functionality for managing and accessing type-related data.
            </summary>
            <remarks>The <see cref="T:DCS.Contact.Service.TypeService"/> class extends the <see cref="T:DCS.CoreLib.BaseClass.ServiceBase`3"/> class, specializing it for operations involving <see cref="T:DCS.Contact.Type"/> entities and their associated
            repository interface, <see cref="T:DCS.Contact.ITypeRepository"/>.</remarks>
        </member>
        <member name="M:DCS.Contact.Service.TypeService.#ctor(DCS.Contact.ITypeRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.Service.TypeService"/> class with the specified repository.
            </summary>
            <param name="repository">The repository used to manage and access type-related data. This parameter cannot be <see langword="null"/>.</param>
        </member>
    </members>
</doc>
