<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DCS.Contact</name>
    </assembly>
    <members>
        <member name="T:DCS.Contact.ICompanyRepository">
            <summary>
            Company management repository to handle company data on the table.
            </summary>
        </member>
        <member name="T:DCS.Contact.IContactAssignementRepository">
            <summary>
            Defines a repository for managing <see cref="T:DCS.Contact.ContactAssignement"/> entities, identified by a <see cref="T:System.Guid"/>
            key.
            </summary>
            <remarks>This interface extends <see cref="T:DCS.CoreLib.IRepositoryBase`2"/> to provide functionality
            specific to  <see cref="T:DCS.Contact.ContactAssignement"/> entities. It serves as a contract for implementing data access
            operations  related to contact assignments.</remarks>
        </member>
        <member name="T:DCS.Contact.IContactRepository">
            <summary>
            DCS ContactManagementRepository to manipulate contact data on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.IContactRepository.GetByFirstName(System.String)">
            <summary>
            Gets a collection of contacts matching on given firstname.
            </summary>
            <param name="contactFirstName">Contacts firstname.</param>
        </member>
        <member name="M:DCS.Contact.IContactRepository.GetByLastName(System.String)">
            <summary>
            Gets a collection of contacts matching on given lastname.
            </summary>
            <param name="contactLastName">Contacts lastname.</param>
        </member>
        <member name="T:DCS.Contact.IEmailAdressRepository">
            <summary>
            Repository for email data management on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.IEmailAdressRepository.GetAllByContact(System.Guid)">
            <summary>
            Get all emails by contact guid.
            </summary>
            <param name="contactGuid">Selected contact unique identifier.</param>
            <returns>List of all contact related email adresses.</returns>
        </member>
        <member name="M:DCS.Contact.IEmailAdressRepository.GetAllByUser(System.Guid)">
            <summary>
            Get all emails by user guid.
            </summary>
            <param name="userGuid">Selected user unique identifier.</param>
            <returns>List of all user related email addresses.</returns>
        </member>
        <member name="T:DCS.Contact.IGroupRepository">
            <summary>
            Repository for group data management on the table.
            </summary>
        </member>
        <member name="T:DCS.Contact.IPhoneRepository">
            <summary>
            Phone Management Repository to handle phone data on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.IPhoneRepository.GetAllByContact(System.Guid)">
            <summary>
            Get phone data by contact guid.
            </summary>
            <param name="contactGuid"></param>
            <returns></returns>
        </member>
        <member name="T:DCS.Contact.IPhysicalAdressRepository">
            <summary>
            Physical Adress Management Repository to handle physical adress data on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.IPhysicalAdressRepository.GetAllByContact(System.Guid)">
            <summary>
            Get all physical adress data by contact guid.
            </summary>
            <param name="contactGuid"></param>
            <returns></returns>
        </member>
        <member name="T:DCS.Contact.IRoleRepository">
            <summary>
            Interface for RoleManagementRepository to handle role data on the table.
            </summary>
        </member>
        <member name="T:DCS.Contact.ITypeRepository">
            <summary>
            Defines a repository for managing and retrieving <see cref="T:DCS.Contact.Type"/> objects, identified by <see cref="T:System.Guid"/>
            keys.
            </summary>
            <remarks>This interface extends <see cref="T:DCS.CoreLib.IRepositoryBase`2"/> to provide functionality
            specific to  repositories handling <see cref="T:DCS.Contact.Type"/> instances. Implementations of this interface are expected
            to  support operations such as adding, updating, retrieving, and deleting <see cref="T:DCS.Contact.Type"/> objects.</remarks>
        </member>
        <member name="T:DCS.Contact.ICompanyService">
            <summary>
            Company service to handle company data.
            </summary>
        </member>
        <member name="M:DCS.Contact.ICompanyService.CreateNewCompany(System.String,System.String,System.Boolean,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Creates a new instance of <see cref="T:DCS.Contact.Company"/>.
            </summary>
            <param name="name">Company name.</param>
            <param name="type">Company type.</param>
            <param name="isActive">Company active flag.</param>
            <param name="companyContact"></param>
            <param name="contactGuid"></param>
            <returns>New instance of <see cref="T:DCS.Contact.Company"/>.</returns>
        </member>
        <member name="T:DCS.Contact.IContactAssignementService">
            <summary>
            Defines the contract for managing contact assignments within the system.
            </summary>
            <remarks>This service provides operations for creating, retrieving, updating, and deleting contact
            assignments. It extends the base service functionality with a focus on the <see cref="T:DCS.Contact.ContactAssignement"/>
            entity.</remarks>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.AddAdressToContact(System.Guid,System.Guid)">
            <summary>
            Associates an address with a contact.
            </summary>
            <remarks>This method creates a new association between the specified contact and address.
            Ensure that both identifiers correspond to existing entities in the repository.</remarks>
            <param name="contactGuid">The unique identifier of the contact to which the address will be added.</param>
            <param name="adressGuid">The unique identifier of the address to associate with the contact.</param>
            <returns><see langword="true"/> if the address was successfully associated with the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.RemoveAdressFromContact(System.Guid,System.Guid)">
            <summary>
            Removes the association between a contact and an address.
            </summary>
            <remarks>This method attempts to find the association between the specified contact and
            address. If the association  exists, it is removed. If no such association is found, the method returns <see
            langword="false"/>.</remarks>
            <param name="contactGuid">The unique identifier of the contact.</param>
            <param name="adressGuid">The unique identifier of the address to be removed from the contact.</param>
            <returns><see langword="true"/> if the association between the contact and the address was successfully removed; 
            otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.AddPhoneToContact(System.Guid,System.Guid)">
            <summary>
            Associates a phone with a contact.
            </summary>
            <remarks>This method creates an association between a contact and a phone using their
            respective unique identifiers. Ensure that both the contact and phone exist in the system before calling
            this method.</remarks>
            <param name="contactGuid">The unique identifier of the contact to which the phone will be assigned.</param>
            <param name="phoneGuid">The unique identifier of the phone to be assigned to the contact.</param>
            <returns><see langword="true"/> if the phone was successfully associated with the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.RemovePhoneFromContact(System.Guid,System.Guid)">
            <summary>
            Removes the association between a contact and a phone number.
            </summary>
            <remarks>This method removes the link between the specified contact and phone number if such
            an association exists. If no matching association is found, the method returns <see
            langword="false"/>.</remarks>
            <param name="contactGuid">The unique identifier of the contact.</param>
            <param name="phoneGuid">The unique identifier of the phone number to be removed.</param>
            <returns><see langword="true"/> if the association was successfully removed; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.AddEmailToContact(System.Guid,System.Guid)">
            <summary>
            Associates an email with a contact.
            </summary>
            <remarks>This method creates an association between a contact and an email. Ensure that both
            the contact and email identifiers are valid and exist in the system before calling this method.</remarks>
            <param name="contactGuid">The unique identifier of the contact to which the email will be assigned.</param>
            <param name="emailGuid">The unique identifier of the email to be associated with the contact.</param>
            <returns><see langword="true"/> if the email was successfully associated with the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.RemoveEmailFromContact(System.Guid,System.Guid)">
            <summary>
            Removes the association between a contact and an email address.
            </summary>
            <remarks>This method attempts to remove the specified email address from the specified
            contact.  If no association exists between the contact and the email address, the method returns <see
            langword="false"/>.</remarks>
            <param name="contactGuid">The unique identifier of the contact.</param>
            <param name="emailGuid">The unique identifier of the email address to be removed from the contact.</param>
            <returns><see langword="true"/> if the association was successfully removed; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.AddCompanyToContact(System.Guid,System.Guid)">
            <summary>
            Associates a company with a contact.
            </summary>
            <remarks>This method creates an association between a contact and a company. Ensure that both
            identifiers represent valid entities in the system before calling this method.</remarks>
            <param name="contactGuid">The unique identifier of the contact to which the company will be associated.</param>
            <param name="companyGuid">The unique identifier of the company to associate with the contact.</param>
            <returns><see langword="true"/> if the company was successfully associated with the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.RemoveCompanyFromContact(System.Guid,System.Guid)">
            <summary>
            Removes the association between a contact and a company.
            </summary>
            <remarks>This method searches for an existing association between the specified contact and
            company. If the association is found, it is removed. If no association exists, the method returns <see
            langword="false"/>.</remarks>
            <param name="contactGuid">The unique identifier of the contact.</param>
            <param name="companyGuid">The unique identifier of the company.</param>
            <returns><see langword="true"/> if the association was successfully removed; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.AddGroupToContact(System.Guid,System.Guid)">
            <summary>
            Assigns a contact to a specified company.
            </summary>
            <remarks>This method creates an association between a contact and a group. Ensure that both
            the contact and group exist before calling this method. The operation will fail if the assignment cannot be
            persisted.</remarks>
            <param name="contactGuid">The unique identifier of the contact to be assigned to the group.</param>
            <param name="groupGuid">The unique identifier of the group to which the contact will be assigned.</param>
            <returns><see langword="true"/> if the contact was successfully assigned to the group; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.RemoveGroupFromContact(System.Guid,System.Guid)">
            <summary>
            Removes the association between a contact and a group.
            </summary>
            <remarks>This method searches for an existing association between the specified contact and
            group. If the association is found, it is removed. If no association exists, the method returns <see
            langword="false"/>.</remarks>
            <param name="contactGuid">The unique identifier of the contact.</param>
            <param name="groupGuid">The unique identifier of the group.</param>
            <returns><see langword="true"/> if the association was successfully removed; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.AddRoleToContact(System.Guid,System.Guid)">
            <summary>
            Assigns a role to a contact by creating a new role assignment.
            </summary>
            <remarks>This method creates a new role assignment for the specified contact and role.  Ensure
            that both the <paramref name="contactGuid"/> and <paramref name="roleGuid"/> correspond to valid
            entities.</remarks>
            <param name="contactGuid">The unique identifier of the contact to which the role will be assigned.</param>
            <param name="roleGuid">The unique identifier of the role to assign to the contact.</param>
            <returns><see langword="true"/> if the role was successfully assigned to the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.IContactAssignementService.RemoveRoleFromContact(System.Guid,System.Guid)">
            <summary>
            Removes the specified role from the contact.
            </summary>
            <remarks>This method attempts to remove the association between the specified contact and
            role. If no such association exists, the method returns <see langword="false"/>.</remarks>
            <param name="contactGuid">The unique identifier of the contact.</param>
            <param name="roleGuid">The unique identifier of the role to be removed.</param>
            <returns><see langword="true"/> if the role was successfully removed from the contact;  otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="T:DCS.Contact.IContactService">
            <summary>
            Represents the contact service to handle and manipulate contact data on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.IContactService.GetByName(System.String)">
            <summary>
            Gets a collection of contacts matching on given name.
            </summary>
            <param name="contactName">Given contact name to search for.</param>
        </member>
        <member name="M:DCS.Contact.IContactService.CreateNewContact(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new contact entity.
            </summary>
            <param name="firstName">Contact firstname.</param>
            <param name="lastName">Contact lastname.</param>
            <param name="isActive">Contact is active flag.</param>
            <returns>New contact entity.</returns>
        </member>
        <member name="T:DCS.Contact.IEmailAdressService">
            <summary>
            EmailAdressService to manipulate emailadress data.
            </summary>
        </member>
        <member name="M:DCS.Contact.IEmailAdressService.CreateEmailAdress(System.String,System.Guid,System.Boolean,System.String)">
            <summary>
            Creates new email instance.
            </summary>
            <param name="mailAdress">Contact email adress.</param>
            <param name="contactGuid">Contact guid.</param>
            <param name="isActive">Email is active flag.</param>
            <param name="type">Email type.</param>
            <returns>New instance of <see cref="T:DCS.Contact.Email"/>.</returns>
        </member>
        <member name="T:DCS.Contact.IGroupService">
            <summary>
            Service for group data management on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.IGroupService.CreateNewGroup(System.String,System.Guid,System.String,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:DCS.Contact.Group"/>.
            </summary>
            <param name="name">Group name.</param>
            <param name="companyGuid">Company group is assigned to.</param>
            <param name="description">Company description.</param>
            <param name="isActive">Company is active flag.</param>
            <returns>New instance of <see cref="T:DCS.Contact.Group"/>.</returns>
        </member>
        <member name="T:DCS.Contact.IPhoneService">
            <summary>
            Phone Service to handle phone data on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.IPhoneService.CreateNewPhone(System.String,System.String,System.Boolean,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Creates a new instance of <see cref="T:DCS.Contact.Phone"/>.
            </summary>
            <param name="phoneNumber">Contact phonenumber.</param>
            <param name="type">Phonenumber type.</param>
            <param name="isActive">Phonenumber is active flag.</param>
            <param name="contactGuid">Contact phonenumber is assigned to.</param>
            <param name="companyGuid">Company phonenumber is assigned to.</param>
            <returns>New instance of <see cref="T:DCS.Contact.Phone"/>.</returns>
        </member>
        <member name="T:DCS.Contact.IPhysicalAdressService">
            <summary>
            Physical Adress Service to handle contact adress data on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.IPhysicalAdressService.CreateNewAdress(DCS.Contact.Contact,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,DCS.Contact.Company)">
            <summary>
            Creates a new address for the specified contact and company.
            </summary>
            <param name="ownerContact">The contact who owns the address.</param>
            <param name="streetName">The street name of the address.</param>
            <param name="houseNumber">The house number of the address.</param>
            <param name="adressAddon">Additional address information.</param>
            <param name="city">The city of the address.</param>
            <param name="postalCode">The postal code of the address.</param>
            <param name="country">The country of the address.</param>
            <param name="isActive">Indicates whether the address is active.</param>
            <param name="ownerCompany">The company that owns the address (optional).</param>
            <returns>The newly created address.</returns>
        </member>
        <member name="M:DCS.Contact.IPhysicalAdressService.GetAllByContact(DCS.Contact.Contact)">
            <summary>
            Gets all contact assigned adresses.
            </summary>
            <param name="contact">Selected contact.</param>
            <returns>Collection of all adresses assigned to given contact.</returns>
        </member>
        <member name="T:DCS.Contact.IRoleService">
            <summary>
            DCS RoleService to manipulate role data.
            </summary>
        </member>
        <member name="M:DCS.Contact.IRoleService.CreateNewRole(System.String,System.Guid,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:DCS.Contact.Role"/>.
            </summary>
            <param name="name">Role name.</param>
            <param name="companyGuid">Company role is assigned to.</param>
            <param name="description">Role description.</param>
            <param name="isAdmin">Role has admin rights flag.</param>
            <param name="isActive">Role is active flag.</param>
            <returns>New instance of <see cref="T:DCS.Contact.Role"/>.</returns>
        </member>
        <member name="T:DCS.Contact.ITypeService">
            <summary>
            Defines a contract for services that manage and provide access to type-related data.
            </summary>
            <remarks>This interface extends <see cref="T:DCS.Contact.ITypeRepository"/>, inheriting its functionality for
            accessing type data. Implementations of this interface may include additional business logic or service-specific
            operations related to type management.</remarks>
        </member>
        <member name="T:DCS.Contact.Adress">
            <summary>
            Represents an physical adress.
            </summary>
        </member>
        <member name="M:DCS.Contact.Adress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.Adress"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.Guid">
            <summary>
            Gets or sets the unique identifier of the adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.StreetName">
            <summary>
            Gets or sets the street name of the adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.HouseNumber">
            <summary>
            Gets or sets the house number of the adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.AdressAddon">
            <summary>
            Gets or sets the adress addon of the adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.City">
            <summary>
            Gets or sets the city of a adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.PostalCode">
            <summary>
            Gets or sets the postal code of a adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.Country">
            <summary>
            Gets or sets the country of a adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.IsActive">
            <summary>
            Indicates whether the adress is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.UserGuid">
            <summary>
            Gets or sets the user guid of the adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.ContactGuid">
            <summary>
            Gets or sets the contact guid of the adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.Adress.CompanyGuid">
            <summary>
            Gets or sets the company guid of the adress.
            </summary>
        </member>
        <member name="T:DCS.Contact.Company">
            <summary>
            Represents a company.
            </summary>
        </member>
        <member name="M:DCS.Contact.Company.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.Company"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.Company.Guid">
            <summary>
            Gets or sets the unique identifier of the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.Company.Name">
            <summary>
            Gets or sets the name of the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.Company.Type">
            <summary>
            Gets or sets the type of the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.Company.IsActive">
            <summary>
            Indicates whether the company is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.Company.CompanyContact">
            <summary>
            Gets or sets the unique identifier of the primary contact person of a company.
            </summary>
        </member>
        <member name="P:DCS.Contact.Company.ContactGuid">
            <summary>
            Gets or sets the unique identifier of the contact who created the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.Company.UserGuid">
            <summary>
            Gets or sets the unique identifier of the user who created the company.
            </summary>
        </member>
        <member name="T:DCS.Contact.Contact">
            <summary>
            Represents a contact.
            </summary>
        </member>
        <member name="M:DCS.Contact.Contact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.Contact"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.Contact.Guid">
            <summary>
            Gets or sets the unique identifier of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.Contact.FirstName">
            <summary>
            Gets or sets the first name of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.Contact.LastName">
            <summary>
            Gets or sets the last name of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.Contact.IsActive">
            <summary>
            Indicates whether the contact is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.Contact.CreationDate">
            <summary>
            Gets or sets the date of creation of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.Contact.LastModificationDate">
            <summary>
            Gets or sets the date of the last modification of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.Contact.DeleteDate">
            <summary>
            Gets or sets the date of deletion of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.Contact.UserGuid">
            <summary>
            Gets or sets the unique identifier of the user who created the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.Contact.ProfilePicturePath">
            <summary>
            Gets or sets the file path to the contact's profile picture.
            </summary>
        </member>
        <member name="T:DCS.Contact.ContactAssignement">
            <summary>
            Represents the assignment of various identifiers associated with a contact,  including their address, email,
            company, phone, group, and role.
            </summary>
            <remarks>This class serves as a container for linking a contact to multiple related entities  through
            their respective unique identifiers. Each property corresponds to a specific  entity or attribute associated
            with the contact.</remarks>
        </member>
        <member name="M:DCS.Contact.ContactAssignement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.ContactAssignement"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.ContactAssignement.Guid">
            <summary>
            Gets or sets the unique identifier for the object.
            </summary>
        </member>
        <member name="P:DCS.Contact.ContactAssignement.ContactGuid">
            <summary>
            Gets or sets the unique identifier for the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.ContactAssignement.AdressGuid">
            <summary>
            Gets or sets the unique identifier associated with the address.
            </summary>
        </member>
        <member name="P:DCS.Contact.ContactAssignement.EmailGuid">
            <summary>
            Gets or sets the unique identifier associated with an email, if available.
            </summary>
        </member>
        <member name="P:DCS.Contact.ContactAssignement.CompanyGuid">
            <summary>
            Gets or sets the unique identifier for the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.ContactAssignement.PhoneGuid">
            <summary>
            Gets or sets the unique identifier associated with a phone.
            </summary>
        </member>
        <member name="P:DCS.Contact.ContactAssignement.GroupGuid">
            <summary>
            Gets or sets the unique identifier for the group.
            </summary>
        </member>
        <member name="P:DCS.Contact.ContactAssignement.RoleGuid">
            <summary>
            Gets or sets the unique identifier for the role.
            </summary>
        </member>
        <member name="T:DCS.Contact.Email">
            <summary>
            Email class for the email model.
            </summary>
        </member>
        <member name="M:DCS.Contact.Email.#ctor">
            <summary>
            Constructor for the email class.
            </summary>
        </member>
        <member name="P:DCS.Contact.Email.Guid">
            <summary>
            Gets or sets the Guid of the email.
            </summary>
        </member>
        <member name="P:DCS.Contact.Email.Type">
            <summary>
            Gets or sets the type of the email address.
            </summary>
        </member>
        <member name="P:DCS.Contact.Email.MailAdress">
            <summary>
            Gets or sets the email address.
            </summary>
        </member>
        <member name="P:DCS.Contact.Email.IsActive">
            <summary>
            Indicates wether the email address is active or not.
            </summary>
        </member>
        <member name="P:DCS.Contact.Email.UserGuid">
            <summary>
            Gets or sets the user guid.
            </summary>
        </member>
        <member name="P:DCS.Contact.Email.ContactGuid">
            <summary>
            Gets or sets the contact guid.
            </summary>
        </member>
        <member name="P:DCS.Contact.Email.CompanyGuid">
            <summary>
            Gets or sets the company guid.
            </summary>
        </member>
        <member name="T:DCS.Contact.Group">
            <summary>
            Group class for group assignements of contacts and users.
            </summary>
        </member>
        <member name="M:DCS.Contact.Group.#ctor">
            <summary>
            Default constructor for Group class.
            </summary>
        </member>
        <member name="P:DCS.Contact.Group.Guid">
            <summary>
            Gets or sets the Guid of the group.
            </summary>
        </member>
        <member name="P:DCS.Contact.Group.Name">
            <summary>
            Gets or sets the name of the group.
            </summary>
        </member>
        <member name="P:DCS.Contact.Group.Description">
            <summary>
            Gets or sets the description of the group.
            </summary>
        </member>
        <member name="P:DCS.Contact.Group.IsActive">
            <summary>
            Indicates wether the group is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.Group.UserGuid">
            <summary>
            Gets or sets the Guid of the user who created the group.
            </summary>
        </member>
        <member name="P:DCS.Contact.Group.CompanyGuid">
            <summary>
            Gets or sets the Guid of the company associated to the group.
            </summary>
        </member>
        <member name="T:DCS.Contact.Phone">
            <summary>
            Phone class model for phone number data on the table.
            </summary>
        </member>
        <member name="M:DCS.Contact.Phone.#ctor">
            <summary>
            Constructor for the Phone class.
            </summary>
        </member>
        <member name="P:DCS.Contact.Phone.Guid">
            <summary>
            Gets or sets the Guid of the phone number.
            </summary>
        </member>
        <member name="P:DCS.Contact.Phone.Type">
            <summary>
            Gets or sets the type of the phone number.
            </summary>
        </member>
        <member name="P:DCS.Contact.Phone.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
        </member>
        <member name="P:DCS.Contact.Phone.IsActive">
            <summary>
            Gets or sets wether the phone number is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.Phone.UserGuid">
            <summary>
            Gets or sets the Guid of the user.
            </summary>
        </member>
        <member name="P:DCS.Contact.Phone.ContactGuid">
            <summary>
            Gets or sets the Guid of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.Phone.CompanyGuid">
            <summary>
            Gets or sets the Guid of the company.
            </summary>
        </member>
        <member name="T:DCS.Contact.Role">
            <summary>
            Represents a role for users in the system.
            </summary>
        </member>
        <member name="M:DCS.Contact.Role.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.Role"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.Role.Guid">
            <summary>
            Gets or sets the unique identifier for the role.
            </summary>
        </member>
        <member name="P:DCS.Contact.Role.Name">
            <summary>
            Gets or sets the name of the role.
            </summary>
        </member>
        <member name="P:DCS.Contact.Role.Description">
            <summary>
            Gets or sets the description of the role.
            </summary>
        </member>
        <member name="P:DCS.Contact.Role.IsAdmin">
            <summary>
            Gets or sets a value indicating whether the role is an administrator role.
            </summary>
        </member>
        <member name="P:DCS.Contact.Role.IsActive">
            <summary>
            Gets or sets a value indicating whether the role is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.Role.UserGuid">
            <summary>
            Gets or sets the unique identifier for the user who created the role.
            </summary>
        </member>
        <member name="P:DCS.Contact.Role.CompanyGuid">
            <summary>
            Gets or sets the unique identifier for the company associated with the role.
            </summary>
        </member>
        <member name="T:DCS.Contact.Type">
            <summary>
            Represents a type of an object with a unique identifier, a name, and an active status.
            </summary>
            <remarks>This class provides a structure for defining an entity with a globally unique identifier
            (GUID), a descriptive name, and a boolean flag indicating whether the entity is active.</remarks>
        </member>
        <member name="M:DCS.Contact.Type.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.Type"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.Type.Guid">
            <summary>
            Gets or sets the unique identifier for the type.
            </summary>
        </member>
        <member name="P:DCS.Contact.Type.Name">
            <summary>
            Gets or sets the name for the type.
            </summary>
        </member>
        <member name="P:DCS.Contact.Type.IsActive">
            <summary>
            Gets or sets a value indicating whether the type is currently active.
            </summary>
        </member>
    </members>
</doc>
