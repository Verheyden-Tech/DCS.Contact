<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DCS.Contact.UI</name>
    </assembly>
    <members>
        <member name="T:DCS.Contact.UI.CompanyViewModel">
            <summary>
            ViewModel for company instances.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.CompanyViewModel.#ctor(DCS.Contact.Company)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.CompanyViewModel"/> class.
            </summary>
            <param name="company"></param>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.Guid">
            <summary>
            Gets or sets the unique identifier of the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.Name">
            <summary>
            Gets or sets the name of the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.Type">
            <summary>
            Gets or sets the type of the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.IsActive">
            <summary>
            Indicates whether the company is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.CompanyContact">
            <summary>
            Gets or sets the unique identifier of the primary contact person of a company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.ContactGuid">
            <summary>
            Gets or sets the unique identifier of the contact who created the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.UserGuid">
            <summary>
            Gets or sets the unique identifier of the user who created the company.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.ContactManagementViewModel">
            <summary>
            ViewModel for contact management.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactManagementViewModel.#ctor(DCS.Contact.Contact)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.ContactManagementViewModel"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactManagementViewModel.Guid">
            <summary>
            Gets or sets the contact's guid.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactManagementViewModel.FirstName">
            <summary>
            Gets or sets the contact's first name.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactManagementViewModel.LastName">
            <summary>
            Gets or sets the contact's last name.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactManagementViewModel.IsActive">
            <summary>
            Indicates if the contact is active.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.ContactViewModel">
            <summary>
            ViewModel for the contact editor.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.#ctor(DCS.Contact.Contact)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.ContactViewModel"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.Guid">
            <summary>
            Gets or sets the unique identifier of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.FirstName">
            <summary>
            Gets or sets the first name of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.LastName">
            <summary>
            Gets or sets the last name of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.IsActive">
            <summary>
            Indicates whether the contact is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.CreationDate">
            <summary>
            Gets or sets the creation date of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.LastModificationDate">
            <summary>
            Gets or sets the date and time of the last modification.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.DeleteDate">
            <summary>
            Gets or sets the date and time when the contact was marked for deletion.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.UserGuid">
            <summary>
            Gets or sets the unique identifier for the user.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.ProfilePicturePath">
            <summary>
            Gets or sets the file path to the contact's profile picture.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.ContactAdresses">
            <summary>
            Contains all contact related adresses.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.ContactPhoneNumbers">
            <summary>
            Contains all contact related phone numbers.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.ContactEmails">
            <summary>
            Contains all contact related email adresses.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.ContactCompanies">
            <summary>
            Contains all contact related companies.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.EmailAdressViewModel">
            <summary>
            ViewModel for EmailAdress.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.EmailAdressViewModel.#ctor(DCS.Contact.Email)">
            <summary>
            Constructor for EmailAdressViewModel.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.EmailAdressViewModel.Guid">
            <summary>
            Gets or sets the guid of a email adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.EmailAdressViewModel.Type">
            <summary>
            Gets or sets the type of a email adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.EmailAdressViewModel.MailAdress">
            <summary>
            Gets or sets the mail adress.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.PhoneNumberViewModel">
            <summary>
            Phone number view model.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.PhoneNumberViewModel.#ctor(DCS.Contact.Phone)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.PhoneNumberViewModel"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhoneNumberViewModel.Guid">
            <summary>
            Gets or sets the phone number guid.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhoneNumberViewModel.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhoneNumberViewModel.Type">
            <summary>
            Gets or sets the phone number type.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.PhysicalAdressViewModel">
            <summary>
            ViewModel for physical adresses.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.PhysicalAdressViewModel.#ctor(DCS.Contact.Adress)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.PhysicalAdressViewModel"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.StreetName">
            <summary>
            Gets or sets the street name.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.HouseNumber">
            <summary>
            Gets or sets the house number.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.PostalCode">
            <summary>
            Gets or sets the adress postal code.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.City">
            <summary>
            Gets or sets the city.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.Country">
            <summary>
            Gets or sets the country.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.TypeViewModel">
            <summary>
            Represents a view model for a <see cref="T:DCS.Contact.Type"/> object, providing data binding and notification support for its
            properties.
            </summary>
            <remarks>This class extends <see cref="T:DCS.CoreLib.BaseClass.ViewModelBase`2"/> to provide a strongly-typed view
            model for <see cref="T:DCS.Contact.Type"/> objects. It exposes key properties of the underlying <see cref="T:DCS.Contact.Type"/> model, such
            as <see cref="P:DCS.Contact.UI.TypeViewModel.Guid"/>, <see cref="P:DCS.Contact.UI.TypeViewModel.Name"/>, and <see cref="P:DCS.Contact.UI.TypeViewModel.IsActive"/>, and raises property change notifications
            when these properties are updated.</remarks>
        </member>
        <member name="M:DCS.Contact.UI.TypeViewModel.#ctor(DCS.Contact.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.TypeViewModel"/> class using the specified <see cref="T:DCS.Contact.Type"/>.
            </summary>
            <param name="type">The <see cref="T:DCS.Contact.Type"/> that this view model represents. Cannot be <see langword="null"/>.</param>
        </member>
        <member name="M:DCS.Contact.UI.TypeViewModel.Save">
            <summary>
            Saves the current model.
            </summary>
            <remarks>The method attempts to save the model using the associated type service.  If the
            model is null, the save operation will not be performed, and the method will return <see
            langword="false"/>.</remarks>
            <returns><see langword="true"/> if the model is successfully saved; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:DCS.Contact.UI.TypeViewModel.Guid">
            <summary>
            Gets or sets the unique identifier associated with the type.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.TypeViewModel.Name">
            <summary>
            Gets or sets the name associated with the type.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.TypeViewModel.IsActive">
            <summary>
            Gets or sets a value indicating whether the current type is active.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.ContactEditor">
            <summary>
            Interaction logic for ContactEditor.xaml
            </summary>
            <summary>
            ContactEditor
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.ContactEditor"/> class.
            </summary>
            <remarks>This constructor sets up the data context for the contact editor and initializes the
            contact's email addresses and phone numbers based on existing assignments. It also configures the UI
            visibility for email and phone number fields based on the contact's data.</remarks>
        </member>
        <member name="P:DCS.Contact.UI.ContactEditor.Current">
            <summary>
            Gets the current contact view model as data context.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactEditor.PopulateCountryList">
            <summary>
            Retrieves a collection of distinct country names in English, sorted in descending order.
            </summary>
            <remarks>The method gathers country names based on specific cultures available in the system.
            The returned collection is distinct and sorted in descending alphabetical order.</remarks>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> of strings containing the English names of countries. If no
            countries are found, an empty collection is returned.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactEditor.Edit(System.Collections.Generic.IList{DCS.Contact.Contact})">
            <summary>
            Adds paging objects to the window.
            </summary>
            <param name="models"></param>
        </member>
        <member name="M:DCS.Contact.UI.ContactEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.ContactManagement">
            <summary>
            Interaction logic for CustomerManagement.xaml
            </summary>
            <summary>
            ContactManagement
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactManagement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.ContactManagement"/> class.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactManagement.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.EmailAdressEditor">
            <summary>
            Interaction logic for EmailAdressEditor.xaml
            </summary>
            <summary>
            EmailAdressEditor
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.EmailAdressEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.EmailAdressEditor"/> class.
            </summary>
            <remarks>This constructor sets up the necessary components for the <see
            cref="T:DCS.Contact.UI.EmailAdressEditor"/>. Ensure that the required dependencies are properly configured before using this
            editor.</remarks>
        </member>
        <member name="M:DCS.Contact.UI.EmailAdressEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.TypeEditor">
            <summary>
            Interaction logic for TypeEditor.xaml
            </summary>
            <summary>
            TypeEditor
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.TypeEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.TypeEditor"/> class.
            </summary>
            <remarks>This constructor sets up the <see cref="T:DCS.Contact.UI.TypeEditor"/> by initializing its components,
            creating a new instance of the <see cref="T:DCS.Contact.Type"/> class, and associating a  <see cref="T:DCS.Contact.UI.TypeViewModel"/> with
            the editor's data context.</remarks>
        </member>
        <member name="P:DCS.Contact.UI.TypeEditor.Current">
            <summary>
            Gets the current <see cref="T:DCS.Contact.UI.TypeViewModel"/> instance as data context.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.TypeEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
