<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DCS.Contact.UI</name>
    </assembly>
    <members>
        <member name="T:DCS.Contact.UI.CompanyViewModel">
            <summary>
            ViewModel for company instances.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.CompanyViewModel.#ctor(DCS.Contact.Company)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.CompanyViewModel"/> class.
            </summary>
            <param name="company"></param>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.Guid">
            <summary>
            Gets or sets the unique identifier of the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.Name">
            <summary>
            Gets or sets the name of the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.Type">
            <summary>
            Gets or sets the type of the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.IsActive">
            <summary>
            Indicates whether the company is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.CompanyContact">
            <summary>
            Gets or sets the unique identifier of the primary contact person of a company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.ContactGuid">
            <summary>
            Gets or sets the unique identifier of the contact who created the company.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.CompanyViewModel.UserGuid">
            <summary>
            Gets or sets the unique identifier of the user who created the company.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.ContactManagementViewModel">
            <summary>
            ViewModel for contact management.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactManagementViewModel.#ctor(DCS.Contact.Contact)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.ContactManagementViewModel"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactManagementViewModel.Guid">
            <summary>
            Gets or sets the contact's guid.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactManagementViewModel.FirstName">
            <summary>
            Gets or sets the contact's first name.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactManagementViewModel.LastName">
            <summary>
            Gets or sets the contact's last name.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactManagementViewModel.IsActive">
            <summary>
            Indicates if the contact is active.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.ContactViewModel">
            <summary>
            ViewModel for the contact editor.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.#ctor(DCS.Contact.Contact)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.ContactViewModel"/> class using the specified contact.
            </summary>
            <remarks>This constructor initializes several collections, including contact addresses,
            emails, phone numbers, and companies, to manage related data for the specified contact.</remarks>
            <param name="contact">The contact object used to initialize the view model. Cannot be <see langword="null"/>.</param>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.GetContactAdresses(DCS.Contact.Contact)">
            <summary>
            Retrieves a collection of addresses associated with the specified contact.
            </summary>
            <remarks>This method queries the contact assignment service to find address assignments linked
            to the specified contact.  It then retrieves the corresponding address details from the contact address
            service.</remarks>
            <param name="contact">The contact whose associated addresses are to be retrieved. The contact must have a valid <see
            cref="P:DCS.Contact.UI.ContactViewModel.Guid"/>.</param>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> of <see cref="T:DCS.Contact.Adress"/> objects representing the addresses
            associated with the specified contact.  If no addresses are found or an error occurs, an empty collection is
            returned.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.GetContactPhoneNumbers(DCS.Contact.Contact)">
            <summary>
            Retrieves a collection of phone numbers associated with the specified contact.
            </summary>
            <remarks>This method queries the contact assignment service to find phone assignments linked
            to the specified contact. It then retrieves the corresponding phone details using the phone service. If an
            error occurs during the operation, the method logs the error and returns an empty collection.</remarks>
            <param name="contact">The contact whose phone numbers are to be retrieved. The contact must have a valid <see
            cref="P:DCS.Contact.Contact.Guid"/>.</param>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> of <see cref="T:DCS.Contact.Phone"/> objects representing the phone numbers
            associated with the contact. If no phone numbers are found, an empty collection is returned.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.GetContactEmailAdresses(DCS.Contact.Contact)">
            <summary>
            Retrieves a collection of email addresses associated with the specified contact.
            </summary>
            <remarks>This method queries the contact assignment service to find email assignments linked
            to the specified contact. It then retrieves the corresponding email details using the email address service.
            If an error occurs during the operation, the method logs the error and returns an empty
            collection.</remarks>
            <param name="contact">The contact whose email addresses are to be retrieved. The contact must have a valid <see
            cref="P:DCS.Contact.Contact.Guid"/>.</param>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> of <see cref="T:DCS.Contact.Email"/> objects representing the email addresses
            associated with the contact. If no email addresses are found, an empty collection is returned.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.GetContactCompanies(DCS.Contact.Contact)">
            <summary>
            Retrieves a collection of companies associated with the specified contact.
            </summary>
            <remarks>This method queries the contact assignments to find companies linked to the specified
            contact.  If a company cannot be retrieved or an error occurs during processing, the method logs the error
            and returns an empty collection.</remarks>
            <param name="contact">The contact whose associated companies are to be retrieved. The contact must have a valid <see
            cref="P:DCS.Contact.Contact.Guid"/>.</param>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> of <see cref="T:DCS.Contact.Company"/> objects representing the companies
            associated with the specified contact.  Returns an empty collection if no companies are associated with the
            contact or if an error occurs.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.AddAdressToContact(DCS.Contact.Adress)">
            <summary>
            Associates the specified address with the current contact.
            </summary>
            <remarks>This method creates a new assignment between the contact and the specified address. 
            Ensure that the <see cref="P:DCS.Contact.Adress.Guid"/> property of the provided address is valid and not empty.</remarks>
            <param name="adress">The address to associate with the contact. The <see cref="P:DCS.Contact.Adress.Guid"/> property must be set.</param>
            <returns><see langword="true"/> if the address was successfully associated with the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.AddPhoneToContact(DCS.Contact.Phone)">
            <summary>
            Associates a phone number with the current contact.
            </summary>
            <remarks>This method creates a new association between the specified phone number and the
            current contact. Ensure that the <paramref name="phone"/> object is properly initialized before calling this
            method.</remarks>
            <param name="phone">The phone number to associate with the contact. The <see cref="P:DCS.Contact.Phone.Guid"/> property must be set.</param>
            <returns><see langword="true"/> if the phone number was successfully associated with the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.AddEmailToContact(DCS.Contact.Email)">
            <summary>
            Associates the specified email with the current contact.
            </summary>
            <remarks>This method creates a new association between the contact and the specified email. 
            Ensure that the provided email has a valid <see cref="P:DCS.Contact.Email.Guid"/> before calling this method.</remarks>
            <param name="email">The email to be added to the contact. The <see cref="P:DCS.Contact.Email.Guid"/> property must be set.</param>
            <returns><see langword="true"/> if the email was successfully associated with the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.AddCompanyToContact(DCS.Contact.Company)">
            <summary>
            Associates the specified company with the current contact.
            </summary>
            <param name="company">The company to associate with the contact. Must not be <see langword="null"/>.</param>
            <returns><see langword="true"/> if the company was successfully associated with the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.RemoveAdressFromContact(DCS.Contact.Adress)">
            <summary>
            Removes the specified address from the current contact.
            </summary>
            <remarks>The method checks if the specified address is associated with the current contact 
            and removes the association if it exists. If the address is not associated with the  contact, the method
            returns <see langword="false"/>.</remarks>
            <param name="adress">The address to be removed from the contact.</param>
            <returns><see langword="true"/> if the address was successfully removed from the contact;  otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.RemoveEmailFromContact(DCS.Contact.Email)">
            <summary>
            Removes the specified email from the current contact.
            </summary>
            <remarks>This method attempts to remove the association between the specified email and the
            current contact. If no such association exists, the method returns <see langword="false"/>.</remarks>
            <param name="email">The email to be removed from the contact. Must not be <see langword="null"/>.</param>
            <returns><see langword="true"/> if the email was successfully removed from the contact; otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.RemovePhoneFromContact(DCS.Contact.Phone)">
            <summary>
            Removes the specified phone number from the current contact.
            </summary>
            <remarks>This method attempts to remove the association between the specified phone number and
            the current contact. If no such association exists, the method returns <see langword="false"/>.</remarks>
            <param name="phone">The phone number to be removed, identified by its unique identifier.</param>
            <returns><see langword="true"/> if the phone number was successfully removed from the contact;  otherwise, <see
            langword="false"/>.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactViewModel.RemoveCompanyFromContact(DCS.Contact.Company)">
            <summary>
            Removes the specified company from the current contact's assignments.
            </summary>
            <remarks>This method attempts to remove the specified company from the current contact's
            assignments. If the company is not assigned to the contact, the method returns <see langword="false"/>
            without performing any operation.</remarks>
            <param name="company">The company to be removed from the contact's assignments. Must not be <see langword="null"/>.</param>
            <returns><see langword="true"/> if the company was successfully removed from the contact's assignments; otherwise,
            <see langword="false"/> if the company was not assigned to the contact or the removal operation failed.</returns>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.Guid">
            <summary>
            Gets or sets the unique identifier of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.FirstName">
            <summary>
            Gets or sets the first name of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.LastName">
            <summary>
            Gets or sets the last name of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.IsActive">
            <summary>
            Indicates whether the contact is active.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.CreationDate">
            <summary>
            Gets or sets the creation date of the contact.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.LastModificationDate">
            <summary>
            Gets or sets the date and time of the last modification.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.DeleteDate">
            <summary>
            Gets or sets the date and time when the contact was marked for deletion.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.UserGuid">
            <summary>
            Gets or sets the unique identifier for the user.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.ProfilePicturePath">
            <summary>
            Gets or sets the file path to the contact's profile picture.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.StreetName">
            <summary>
            Gets or sets the name of the street associated with the contact's address.
            </summary>
            <remarks>Setting this property updates the corresponding street name in the underlying contact
            address and raises the OnPropertyChanged event for the <see cref="P:DCS.Contact.Adress.StreetName"/> property.</remarks>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.HouseNumber">
            <summary>
            Gets or sets the house number associated with the contact address.
            </summary>
            <remarks>Setting this property raises the OnPropertyChanged event for the contact associated
            <see cref="P:DCS.Contact.Adress.HouseNumber"/> property.</remarks>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.City">
            <summary>
            Gets or sets the city associated with the contact address.
            </summary>
            <remarks>Setting this property updates the city in the underlying contact address and raises
            the OnPropertyChanged" event for the <see cref="P:DCS.Contact.Adress.City"/> property.</remarks>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.PostalCode">
            <summary>
            Gets or sets the postal code associated with the contact address.
            </summary>
            <remarks>Setting this property updates the postal code in the underlying contact address and
            raises the OnPropertyChanged event for the <see cref="P:DCS.Contact.Adress.PostalCode"/> property.</remarks>
        </member>
        <member name="P:DCS.Contact.UI.ContactViewModel.Country">
            <summary>
            Gets or sets the country associated with the contact address.
            </summary>
            <remarks>Setting this property updates the country in the underlying contact address and
            raises the OnPropertyChanged event for the <see cref="P:DCS.Contact.Adress.Country"/> property.</remarks>
        </member>
        <member name="T:DCS.Contact.UI.EmailAdressViewModel">
            <summary>
            ViewModel for EmailAdress.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.EmailAdressViewModel.#ctor(DCS.Contact.Email)">
            <summary>
            Constructor for EmailAdressViewModel.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.EmailAdressViewModel.Guid">
            <summary>
            Gets or sets the guid of a email adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.EmailAdressViewModel.Type">
            <summary>
            Gets or sets the type of a email adress.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.EmailAdressViewModel.MailAdress">
            <summary>
            Gets or sets the mail adress.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.PhoneNumberViewModel">
            <summary>
            Phone number view model.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.PhoneNumberViewModel.#ctor(DCS.Contact.Phone)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.PhoneNumberViewModel"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhoneNumberViewModel.Guid">
            <summary>
            Gets or sets the phone number guid.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhoneNumberViewModel.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhoneNumberViewModel.Type">
            <summary>
            Gets or sets the phone number type.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.PhysicalAdressViewModel">
            <summary>
            ViewModel for physical adresses.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.PhysicalAdressViewModel.#ctor(DCS.Contact.Adress)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.PhysicalAdressViewModel"/> class.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.StreetName">
            <summary>
            Gets or sets the street name.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.HouseNumber">
            <summary>
            Gets or sets the house number.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.PostalCode">
            <summary>
            Gets or sets the adress postal code.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.City">
            <summary>
            Gets or sets the city.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.PhysicalAdressViewModel.Country">
            <summary>
            Gets or sets the country.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.TypeViewModel">
            <summary>
            Represents a view model for a <see cref="T:DCS.Contact.Type"/> object, providing data binding and notification support for its
            properties.
            </summary>
            <remarks>This class extends <see cref="T:DCS.CoreLib.BaseClass.ViewModelBase`2"/> to provide a strongly-typed view
            model for <see cref="T:DCS.Contact.Type"/> objects. It exposes key properties of the underlying <see cref="T:DCS.Contact.Type"/> model, such
            as <see cref="P:DCS.Contact.UI.TypeViewModel.Guid"/>, <see cref="P:DCS.Contact.UI.TypeViewModel.Name"/>, and <see cref="P:DCS.Contact.UI.TypeViewModel.IsActive"/>, and raises property change notifications
            when these properties are updated.</remarks>
        </member>
        <member name="M:DCS.Contact.UI.TypeViewModel.#ctor(DCS.Contact.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.TypeViewModel"/> class using the specified <see cref="T:DCS.Contact.Type"/>.
            </summary>
            <param name="type">The <see cref="T:DCS.Contact.Type"/> that this view model represents. Cannot be <see langword="null"/>.</param>
        </member>
        <member name="M:DCS.Contact.UI.TypeViewModel.Save">
            <summary>
            Saves the current model.
            </summary>
            <remarks>The method attempts to save the model using the associated type service.  If the
            model is null, the save operation will not be performed, and the method will return <see
            langword="false"/>.</remarks>
            <returns><see langword="true"/> if the model is successfully saved; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:DCS.Contact.UI.TypeViewModel.Guid">
            <summary>
            Gets or sets the unique identifier associated with the type.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.TypeViewModel.Name">
            <summary>
            Gets or sets the name associated with the type.
            </summary>
        </member>
        <member name="P:DCS.Contact.UI.TypeViewModel.IsActive">
            <summary>
            Gets or sets a value indicating whether the current type is active.
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.ContactEditor">
            <summary>
            Interaction logic for ContactEditor.xaml
            </summary>
            <summary>
            ContactEditor
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.ContactEditor"/> class.
            </summary>
            <remarks>This constructor sets up the data context for the contact editor and initializes the
            contact's email addresses and phone numbers based on existing assignments. It also configures the UI
            visibility for email and phone number fields based on the contact's data.</remarks>
        </member>
        <member name="P:DCS.Contact.UI.ContactEditor.Current">
            <summary>
            Gets the current contact view model as data context.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactEditor.PopulateCountryList">
            <summary>
            Retrieves a collection of distinct country names in English, sorted in descending order.
            </summary>
            <remarks>The method gathers country names based on specific cultures available in the system.
            The returned collection is distinct and sorted in descending alphabetical order.</remarks>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> of strings containing the English names of countries. If no
            countries are found, an empty collection is returned.</returns>
        </member>
        <member name="M:DCS.Contact.UI.ContactEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.ContactManagement">
            <summary>
            Interaction logic for ContactManagement.xaml
            </summary>
            <summary>
            ContactManagement
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.ContactManagement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.ContactManagement"/> class.
            </summary>
            <remarks>This constructor initializes the data context for the view model and populates
            collections of contact addresses and phone numbers associated with the contact. It also sets the first
            available address and phone number as the default display values.  The constructor retrieves contact
            assignments from the <c>contactAssignementService</c> and uses the <c>contactAdressService</c> and
            <c>phoneService</c> to fetch detailed address and phone information.</remarks>
        </member>
        <member name="M:DCS.Contact.UI.ContactManagement.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.EmailAdressEditor">
            <summary>
            Interaction logic for EmailAdressEditor.xaml
            </summary>
            <summary>
            EmailAdressEditor
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.EmailAdressEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.EmailAdressEditor"/> class.
            </summary>
            <remarks>This constructor sets up the necessary components for the <see
            cref="T:DCS.Contact.UI.EmailAdressEditor"/>. Ensure that the required dependencies are properly configured before using this
            editor.</remarks>
        </member>
        <member name="M:DCS.Contact.UI.EmailAdressEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.Contact.UI.TypeEditor">
            <summary>
            Interaction logic for TypeEditor.xaml
            </summary>
            <summary>
            TypeEditor
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.TypeEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DCS.Contact.UI.TypeEditor"/> class.
            </summary>
            <remarks>This constructor sets up the <see cref="T:DCS.Contact.UI.TypeEditor"/> by initializing its components,
            creating a new instance of the <see cref="T:DCS.Contact.Type"/> class, and associating a  <see cref="T:DCS.Contact.UI.TypeViewModel"/> with
            the editor's data context.</remarks>
        </member>
        <member name="P:DCS.Contact.UI.TypeEditor.Current">
            <summary>
            Gets the current <see cref="T:DCS.Contact.UI.TypeViewModel"/> instance as data context.
            </summary>
        </member>
        <member name="M:DCS.Contact.UI.TypeEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
